// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rewardsrefund.proto

package rewardsrefund

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message for adding a user
type AddUserRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUserRequest) Reset()         { *m = AddUserRequest{} }
func (m *AddUserRequest) String() string { return proto.CompactTextString(m) }
func (*AddUserRequest) ProtoMessage()    {}
func (*AddUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_31905ba79ee479ed, []int{0}
}

func (m *AddUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUserRequest.Unmarshal(m, b)
}
func (m *AddUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUserRequest.Marshal(b, m, deterministic)
}
func (m *AddUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUserRequest.Merge(m, src)
}
func (m *AddUserRequest) XXX_Size() int {
	return xxx_messageInfo_AddUserRequest.Size(m)
}
func (m *AddUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddUserRequest proto.InternalMessageInfo

// The request message listing all the users
type ListUsersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUsersRequest) Reset()         { *m = ListUsersRequest{} }
func (m *ListUsersRequest) String() string { return proto.CompactTextString(m) }
func (*ListUsersRequest) ProtoMessage()    {}
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_31905ba79ee479ed, []int{1}
}

func (m *ListUsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUsersRequest.Unmarshal(m, b)
}
func (m *ListUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUsersRequest.Marshal(b, m, deterministic)
}
func (m *ListUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersRequest.Merge(m, src)
}
func (m *ListUsersRequest) XXX_Size() int {
	return xxx_messageInfo_ListUsersRequest.Size(m)
}
func (m *ListUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersRequest proto.InternalMessageInfo

// The request message for user refunds
type UserRefundRequest struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	RefundItemCost       int32    `protobuf:"varint,2,opt,name=refundItemCost,proto3" json:"refundItemCost,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRefundRequest) Reset()         { *m = UserRefundRequest{} }
func (m *UserRefundRequest) String() string { return proto.CompactTextString(m) }
func (*UserRefundRequest) ProtoMessage()    {}
func (*UserRefundRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_31905ba79ee479ed, []int{2}
}

func (m *UserRefundRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRefundRequest.Unmarshal(m, b)
}
func (m *UserRefundRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRefundRequest.Marshal(b, m, deterministic)
}
func (m *UserRefundRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRefundRequest.Merge(m, src)
}
func (m *UserRefundRequest) XXX_Size() int {
	return xxx_messageInfo_UserRefundRequest.Size(m)
}
func (m *UserRefundRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRefundRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRefundRequest proto.InternalMessageInfo

func (m *UserRefundRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserRefundRequest) GetRefundItemCost() int32 {
	if m != nil {
		return m.RefundItemCost
	}
	return 0
}

// The request message for user balance
type UserBalanceRequest struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Balance              int32    `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserBalanceRequest) Reset()         { *m = UserBalanceRequest{} }
func (m *UserBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*UserBalanceRequest) ProtoMessage()    {}
func (*UserBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_31905ba79ee479ed, []int{3}
}

func (m *UserBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserBalanceRequest.Unmarshal(m, b)
}
func (m *UserBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserBalanceRequest.Marshal(b, m, deterministic)
}
func (m *UserBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserBalanceRequest.Merge(m, src)
}
func (m *UserBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_UserBalanceRequest.Size(m)
}
func (m *UserBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserBalanceRequest proto.InternalMessageInfo

func (m *UserBalanceRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserBalanceRequest) GetBalance() int32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

// The request message for user rewards
type UserRewardsRequest struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Redemption           int32    `protobuf:"varint,2,opt,name=redemption,proto3" json:"redemption,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRewardsRequest) Reset()         { *m = UserRewardsRequest{} }
func (m *UserRewardsRequest) String() string { return proto.CompactTextString(m) }
func (*UserRewardsRequest) ProtoMessage()    {}
func (*UserRewardsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_31905ba79ee479ed, []int{4}
}

func (m *UserRewardsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRewardsRequest.Unmarshal(m, b)
}
func (m *UserRewardsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRewardsRequest.Marshal(b, m, deterministic)
}
func (m *UserRewardsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRewardsRequest.Merge(m, src)
}
func (m *UserRewardsRequest) XXX_Size() int {
	return xxx_messageInfo_UserRewardsRequest.Size(m)
}
func (m *UserRewardsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRewardsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRewardsRequest proto.InternalMessageInfo

func (m *UserRewardsRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserRewardsRequest) GetRedemption() int32 {
	if m != nil {
		return m.Redemption
	}
	return 0
}

type User struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountBalance       int32    `protobuf:"varint,2,opt,name=accountBalance,proto3" json:"accountBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_31905ba79ee479ed, []int{5}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetAccountBalance() int32 {
	if m != nil {
		return m.AccountBalance
	}
	return 0
}

func init() {
	proto.RegisterType((*AddUserRequest)(nil), "AddUserRequest")
	proto.RegisterType((*ListUsersRequest)(nil), "ListUsersRequest")
	proto.RegisterType((*UserRefundRequest)(nil), "UserRefundRequest")
	proto.RegisterType((*UserBalanceRequest)(nil), "UserBalanceRequest")
	proto.RegisterType((*UserRewardsRequest)(nil), "UserRewardsRequest")
	proto.RegisterType((*User)(nil), "User")
}

func init() { proto.RegisterFile("rewardsrefund.proto", fileDescriptor_31905ba79ee479ed) }

var fileDescriptor_31905ba79ee479ed = []byte{
	// 414 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xdf, 0x6a, 0x13, 0x41,
	0x14, 0xc6, 0xd9, 0xb5, 0xb5, 0x7a, 0xa4, 0x69, 0x72, 0x8a, 0x10, 0x8b, 0x48, 0x99, 0x0b, 0xa9,
	0x0a, 0xbb, 0xb6, 0x7a, 0x21, 0x05, 0x05, 0xdb, 0xab, 0x82, 0x20, 0xac, 0xd4, 0x4b, 0x61, 0xb2,
	0x73, 0x2c, 0x03, 0xc9, 0xce, 0x3a, 0x33, 0x1b, 0x2f, 0xc2, 0xde, 0xf8, 0x0a, 0x3e, 0x8c, 0x0f,
	0xe2, 0x2b, 0xf8, 0x20, 0x32, 0x7f, 0x56, 0xb3, 0x9b, 0x5e, 0xe4, 0x32, 0x5f, 0xce, 0xf7, 0x3b,
	0x67, 0xbe, 0x8f, 0x85, 0x43, 0x4d, 0xdf, 0xb9, 0x16, 0x46, 0xd3, 0xd7, 0xa6, 0x12, 0x59, 0xad,
	0x95, 0x55, 0x47, 0x8f, 0x6f, 0x94, 0xba, 0x99, 0x53, 0xce, 0x6b, 0x99, 0xf3, 0xaa, 0x52, 0x96,
	0x5b, 0xa9, 0x2a, 0x13, 0xfe, 0x65, 0x63, 0x18, 0xbd, 0x17, 0xe2, 0xda, 0x90, 0x2e, 0xe8, 0x5b,
	0x43, 0xc6, 0x32, 0x84, 0xf1, 0x07, 0x69, 0xac, 0x93, 0x4c, 0xa7, 0x7d, 0x86, 0x49, 0x18, 0x71,
	0xdc, 0x28, 0xe2, 0x23, 0xd8, 0x69, 0x0c, 0xe9, 0x69, 0x72, 0x9c, 0x9c, 0x3c, 0x38, 0xdb, 0xcd,
	0xfc, 0x84, 0x97, 0xf0, 0x29, 0x8c, 0xc2, 0x0d, 0x57, 0x96, 0x16, 0x97, 0xca, 0xd8, 0x69, 0x7a,
	0x9c, 0x9c, 0xec, 0x16, 0x03, 0x95, 0x5d, 0x01, 0x3a, 0xd7, 0x05, 0x9f, 0xf3, 0xaa, 0xa4, 0x2d,
	0xc0, 0x53, 0xd8, 0x9b, 0x85, 0xe1, 0x48, 0xec, 0x7e, 0xb2, 0x8f, 0x01, 0x55, 0x84, 0x04, 0xb6,
	0x40, 0x3d, 0x01, 0xd0, 0x24, 0x68, 0x51, 0xbb, 0x38, 0x22, 0x6d, 0x4d, 0x61, 0xef, 0x60, 0xc7,
	0x4d, 0xe3, 0x08, 0x52, 0x29, 0x3c, 0xe0, 0x7e, 0x91, 0x4a, 0xe1, 0xde, 0xc6, 0xcb, 0x52, 0x35,
	0x95, 0xbd, 0xe8, 0x5d, 0x32, 0x50, 0xcf, 0x7e, 0xdd, 0x81, 0xfd, 0x10, 0xd8, 0x27, 0xd2, 0x4b,
	0x59, 0x12, 0xbe, 0x81, 0xbd, 0x98, 0x35, 0x1e, 0x64, 0xfd, 0xd4, 0x8f, 0xc2, 0x69, 0xec, 0xe1,
	0x8f, 0xdf, 0x7f, 0x7e, 0xa6, 0x07, 0x0c, 0x7c, 0x5d, 0xee, 0x4e, 0x73, 0x9e, 0x3c, 0xc7, 0xb7,
	0x70, 0xaf, 0xeb, 0x04, 0x27, 0xd9, 0xb0, 0x9e, 0x81, 0x19, 0xf7, 0xbd, 0x79, 0x79, 0x1a, 0xfc,
	0x2f, 0x13, 0x94, 0x30, 0xbe, 0xd4, 0xc4, 0x2d, 0xfd, 0x2f, 0x11, 0x31, 0xdb, 0x68, 0xb4, 0xe3,
	0x9c, 0x7b, 0xce, 0x6b, 0x96, 0x77, 0x9c, 0xd2, 0x9b, 0xc3, 0x6c, 0xbe, 0x72, 0xd4, 0x4c, 0x8a,
	0x36, 0x5f, 0xf5, 0xdb, 0x6c, 0xdd, 0xa5, 0x33, 0x98, 0x5c, 0xd7, 0x22, 0xae, 0x8a, 0x51, 0xe0,
	0x61, 0xb6, 0xd9, 0x72, 0xb7, 0xec, 0xd4, 0x2f, 0x7b, 0x81, 0xcf, 0xfe, 0x1d, 0xed, 0xed, 0x71,
	0x78, 0x7d, 0x5b, 0x6c, 0xba, 0xc5, 0x2f, 0x2e, 0x58, 0x41, 0xb4, 0x88, 0x65, 0x47, 0x7e, 0xbf,
	0xfa, 0xdb, 0xf9, 0x7a, 0xdd, 0xd7, 0x7f, 0x4a, 0x57, 0x7c, 0x3b, 0xbb, 0xeb, 0x3f, 0x8d, 0x57,
	0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xff, 0xf1, 0x66, 0xfc, 0x4f, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RefundServiceClient is the client API for RefundService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RefundServiceClient interface {
	// Add a user
	AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*User, error)
	// Lists users
	ListUser(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (RefundService_ListUserClient, error)
	// Create user refund
	CreateUserRefund(ctx context.Context, in *UserRefundRequest, opts ...grpc.CallOption) (*User, error)
	// Update user balance
	UpdateUserBalance(ctx context.Context, in *UserBalanceRequest, opts ...grpc.CallOption) (*User, error)
	// Redeem Rewards
	RedeemRewards(ctx context.Context, in *UserRewardsRequest, opts ...grpc.CallOption) (*User, error)
}

type refundServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRefundServiceClient(cc grpc.ClientConnInterface) RefundServiceClient {
	return &refundServiceClient{cc}
}

func (c *refundServiceClient) AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/RefundService/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *refundServiceClient) ListUser(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (RefundService_ListUserClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RefundService_serviceDesc.Streams[0], "/RefundService/ListUser", opts...)
	if err != nil {
		return nil, err
	}
	x := &refundServiceListUserClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RefundService_ListUserClient interface {
	Recv() (*User, error)
	grpc.ClientStream
}

type refundServiceListUserClient struct {
	grpc.ClientStream
}

func (x *refundServiceListUserClient) Recv() (*User, error) {
	m := new(User)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *refundServiceClient) CreateUserRefund(ctx context.Context, in *UserRefundRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/RefundService/CreateUserRefund", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *refundServiceClient) UpdateUserBalance(ctx context.Context, in *UserBalanceRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/RefundService/UpdateUserBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *refundServiceClient) RedeemRewards(ctx context.Context, in *UserRewardsRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/RefundService/RedeemRewards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RefundServiceServer is the server API for RefundService service.
type RefundServiceServer interface {
	// Add a user
	AddUser(context.Context, *AddUserRequest) (*User, error)
	// Lists users
	ListUser(*ListUsersRequest, RefundService_ListUserServer) error
	// Create user refund
	CreateUserRefund(context.Context, *UserRefundRequest) (*User, error)
	// Update user balance
	UpdateUserBalance(context.Context, *UserBalanceRequest) (*User, error)
	// Redeem Rewards
	RedeemRewards(context.Context, *UserRewardsRequest) (*User, error)
}

// UnimplementedRefundServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRefundServiceServer struct {
}

func (*UnimplementedRefundServiceServer) AddUser(ctx context.Context, req *AddUserRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUser not implemented")
}
func (*UnimplementedRefundServiceServer) ListUser(req *ListUsersRequest, srv RefundService_ListUserServer) error {
	return status.Errorf(codes.Unimplemented, "method ListUser not implemented")
}
func (*UnimplementedRefundServiceServer) CreateUserRefund(ctx context.Context, req *UserRefundRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserRefund not implemented")
}
func (*UnimplementedRefundServiceServer) UpdateUserBalance(ctx context.Context, req *UserBalanceRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserBalance not implemented")
}
func (*UnimplementedRefundServiceServer) RedeemRewards(ctx context.Context, req *UserRewardsRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RedeemRewards not implemented")
}

func RegisterRefundServiceServer(s *grpc.Server, srv RefundServiceServer) {
	s.RegisterService(&_RefundService_serviceDesc, srv)
}

func _RefundService_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RefundServiceServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RefundService/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RefundServiceServer).AddUser(ctx, req.(*AddUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RefundService_ListUser_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListUsersRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RefundServiceServer).ListUser(m, &refundServiceListUserServer{stream})
}

type RefundService_ListUserServer interface {
	Send(*User) error
	grpc.ServerStream
}

type refundServiceListUserServer struct {
	grpc.ServerStream
}

func (x *refundServiceListUserServer) Send(m *User) error {
	return x.ServerStream.SendMsg(m)
}

func _RefundService_CreateUserRefund_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRefundRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RefundServiceServer).CreateUserRefund(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RefundService/CreateUserRefund",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RefundServiceServer).CreateUserRefund(ctx, req.(*UserRefundRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RefundService_UpdateUserBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RefundServiceServer).UpdateUserBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RefundService/UpdateUserBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RefundServiceServer).UpdateUserBalance(ctx, req.(*UserBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RefundService_RedeemRewards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRewardsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RefundServiceServer).RedeemRewards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RefundService/RedeemRewards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RefundServiceServer).RedeemRewards(ctx, req.(*UserRewardsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RefundService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RefundService",
	HandlerType: (*RefundServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddUser",
			Handler:    _RefundService_AddUser_Handler,
		},
		{
			MethodName: "CreateUserRefund",
			Handler:    _RefundService_CreateUserRefund_Handler,
		},
		{
			MethodName: "UpdateUserBalance",
			Handler:    _RefundService_UpdateUserBalance_Handler,
		},
		{
			MethodName: "RedeemRewards",
			Handler:    _RefundService_RedeemRewards_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListUser",
			Handler:       _RefundService_ListUser_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "rewardsrefund.proto",
}
